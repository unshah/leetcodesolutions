/* 
We are given a list nums of integers representing a list compressed with run-length encoding.

Consider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.

Return the decompressed list.
*/
// Solution:-
 var decompressRLElist = function(nums) {
    let ans =[];
    for(let i = 0; i< nums.length; i++){
        let ca = [];
        let freq = nums[2*i];
        let val = nums[2*i+1];
        for(let j = 0; j<freq; j++){
            ca.push(val);
        }
        ans = ans.concat(ca); 
    }
    return ans;
};
/*
Runtime: 158 ms (0.0902)
Memory: 47.7 MB (0.1840)
*/
